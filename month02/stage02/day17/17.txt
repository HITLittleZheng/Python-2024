前情回顾

1. FTP文件服务器

   分析思路
   通信协议： 响应

2. I/O

     计算         IO密集

3. IO 模型

    阻塞
    非阻塞 ： setblocking()  settimeout()

4. IO 多路复用

   select
   io并发模型




cookie :
  数据结构

  文件描述符：一个大于等于0 的整数
            操作系统给每个IO分配一个标号

         特点 ： 不重复
         获取 ： io_obj.fileno()


基于epoll的方法，实现一个与select_server功能
相同的程序



select : 跨平台好   效率比epoll低  同时关注1024个IO
epoll ： 只支持Linux   效率较高   同时关注IO数量无上限
         epoll支持边缘触发


水平触发：当有IO事件发生时如果没有处理则一直返回提醒
边缘触发：当有IO事件发生时如果没有处理则不会一直提醒
         直到下次再有事件发生再次提醒处理


练习：
通过浏览器访问  127.0.0.1:8000可以获取一张图片
图片自定，要求可以循环的访问

提示： Content-Type:image/jpeg


web 服务程序实现

需求： 根据请求 发送响应

结构： 类
技术点 ：  tcp
          IO ： select     epoll

协议 ： http协议通信

1.搭建网络服务
2.【1】 接收客户端（浏览器）请求
  【2】 解析客户端发送的请求
  【3】 根据请求组织数据内容
  【4】 将数据内容形成http响应格式返回给浏览器


关于类的设计的一点讨论思考

socket
   被客户端连接：监听套接字 socket  bind listen
   连接服务端：tcp客户端套接字 socket  connect
   udp通信：udp套接字   socket

Process  接口（API）
   p = Process()
   p.start()



今日内容：
 1. epoll 学习
 2. 对比 select epoll
 3. http  格式

作业： 1.整理代码
        聊天室    ftp
      2. webserver 发送功能

      3. gitee.com


