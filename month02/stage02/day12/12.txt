前情回顾

1. udp套接字
 服务端：socket()->bind()->recvfrom/sendto->close()
 客户端：socket()--------->sendto/recvfrom->close()

 简单  快捷  高效  不保证可靠性

2. tcp传输特点

   面向连接  保证传输可靠性
   三次握手  四次挥手

3. tcp套接字

 服务端： socket->bind->listen->accept->recv/send->close
 客户端： socket-------------->connect->send/recv->close

  recv()


练习01  tcp完成：
完成一个对话小程序，客户端可以发送问题给服务端，
服务端接收到问题将对应答案给客户端，客户端打印出来

要求可以同时多个客户端提问，如果问题没有指定答案，
则回答 “人家还小，不知道啦。”

注意： 不需要使用数据库文件存储应答内容，
在服务端用字典表示关键字和答案之间的对应关系即可
{"key":"value"}
key: 几岁
value ： 我2岁啦


练习2
在客户端有一些数据
data = [
  "张三  18   177",
  "李四  19   180",
  "王五  120  183"
]
从客户端向服务端发送这些数据，
在服务端将这些数据，每个数据占一行打印出来
客户端发送完成时 向服务端发送 '#' 表示发送完毕
两侧退出


《图解tcp/ip》
《图解HTTP》


今日内容：
1. tcp学习 ： 粘包
2. tcp首部信息
3. 多任务编程
4. 进程创建

作业：1. 网络总结  tcp udp
     2. 编程作业

随堂练习：大文件拆分
有一个大文件，将其拆分成上下两个部分 （按照字节大小）
，要求两个部分拆分要同步进行
plus ： 假设文件很大不要一次read读取全部

提示 ： os.path.getsize() 获取文件大小
       创建两个子进程分别拆上下两个部分














