前情回顾

1.tcp细节
  tcp粘包 ： tcp  连续发送  发送速度快

2.完成网络传输

  tcp首部信息 ： 传输层

  源端口 目标端口  序列号 确认序列
  flags（SYN ACK  FIN）

3. 多任务编程
  写一个程序实现多个任务，多个任务可以一起执行

  一起： 从cpu 可能是并发 可能是并行

  实现： 多进程  多线程

4. 进程

   什么是进程
   进程状态： 就绪  执行  阻塞

   ps -aux    pstree
   父子进程
   进程PID

5. 创建进程
   写函数 --》 进程做什么
   实例化进程对象 p = Process()
   创建启动进程 p.start()

             p.join()


cookie:
win mac 创建进程： 防止无穷创建子子孙孙进程
if __name__ == "__main__":
    p = Process()
    p.start()
    p.join()

=======================================

随堂修改：
所有子进程结束后，打印 "事情完成啦"


实现与之前程序相同的事情，但是只允许写一个子进程函数


练习01：
1. 求100000以内质数之和，并且计算这个求和过程的时间

2. 将100000分成4份，创建4个进程，每个进程求
其中一份的质数之和，统计4个进程执行完的时间

练习02
在主目录下有一个文件夹，里面有若干普通文件，
要求将该文件夹复制一份到当前程序所在目录下，
在复制过程中要求每个文件的复制过程采用一个独立
的进程完成

提示： 创建文件夹 os.mkdir(dir)


群聊聊天室
    有人进入聊天室需要输入姓名，姓名不能重复
    有人进入聊天室时，其他人会收到通知：Lucy 进入了聊天室
    一个人发消息，其他人会收到： Lucy ： 一起出去玩啊。
    有人退出聊天室，则其他人也会收到通知 : Lucy 退出了聊天室

需求分析： C/S  客户端知道怎么使用使用流程
   见图

技术点分析 ： 大体上能够确定的技术方向
   存储内容（容器）： 姓名  地址
       [(name,address),...]
       {name:address}

   网络 ： udp
   网络消息数据流： 客户端--》 服务端 --》 客户端



功能划分： 分成几个功能块  封装和代码结构

设计通信协议

分模块设计逻辑
    框架结构

优化完善


今日内容：
1. 进程： 进程细节
2. 进程间通信
3. 聊天室

作业： 1. 聊天室分析
      2. 练习独立写一下




